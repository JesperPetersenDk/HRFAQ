@page "/setting"
@rendermode InteractiveServer

@inject ILoggningService _log
@inject ISettingsService info

<PageTitle>Home</PageTitle>


@if(modelData == null)
{
    <p>Loading</p>
}
else
{
    <div class="mx-auto max-w-3xl text-center">
        <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">@TextHelperResFile.TopTitleText.ReplaceText(null)</h2>
        <p class="leading-8 mt-2 text-lg text-gray-600">@TextHelperResFile.TopDeckText.ReplaceText(null)</p>
        <AlertInformation Message="@message"
                          Status="@status" />
    </div>
    <EditForm Model="@modelData" FormName="searchHome" OnSubmit="HandleSubmitUpdateSettings" class="mx-auto mt-4 max-w-3xl">
        <div class="grid-cols-1 grid gap-x-8 gap-y-6 sm:grid-cols-2">
            <div class="sm:col-span-2">
                <div class="mt-4">
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingRemoveMatchWords
                        <InputCheckbox @bind-Value="modelData.RemoveMatchWords" />
                    </div>
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingAnswerMuli
                        <InputCheckbox @bind-Value="modelData.AnswerMuli" />
                    </div>
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingLink
                        <InputCheckbox @bind-Value="modelData.LinkTarget" />
                    </div>
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingLoginUser
                        <InputCheckbox @bind-Value="modelData.LoginUser" />
                    </div>
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingRapport
                        <InputCheckbox @bind-Value="modelData.StatusRapport" />
                    </div>
                    <div class="mt-5 w-full border border-gray-200 bg-gray-200 p-3">
                        @TextHelperResFile.SettingCategori
                        <InputCheckbox @bind-Value="modelData.CompanyCategory" />
                    </div>
                </div>
            </div>
        </div>
        <div class="mt-4">
            <button type="submit" class="block w-full rounded-md bg-green-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600">
                @TextHelperResFile.SettingUpdate
            </button>
        </div>
    </EditForm>
}

@code {
    [SupplyParameterFromForm]
    SettingModel modelData { get; set; } = new SettingModel();

    public string message { get; set; } = string.Empty;
    public EnumStatusValue status { get; set; }

    private void CheckboxChecked(ChangeEventArgs e, string boxName)
    {
        Console.WriteLine(boxName + " selected: " + e.Value);
    }

    protected override async Task OnInitializedAsync()
    {
        _log.Log("User show the page. - Setting", EnumStatusValue.Info);

        var result = await info.GetSettingInformation();
        var resultData = result.GetData.Cast<SettingModel>().FirstOrDefault();
        if(resultData != null)
        {
            modelData.RemoveMatchWords = resultData.RemoveMatchWords;
            modelData.AnswerMuli = resultData.AnswerMuli;
            modelData.StatusRapport = resultData.StatusRapport;
            modelData.CompanyCategory = resultData.CompanyCategory;
            modelData.LoginUser = resultData.LoginUser;
            modelData.LinkTarget = resultData.LinkTarget;
        }

        //return base.OnInitializedAsync();
    }

    private async Task HandleSubmitUpdateSettings()
    {
        var result = await info.UpdateSettingInformation(modelData);
        status = result.Status;
        message = result.MessegeTouser;
    }
}
