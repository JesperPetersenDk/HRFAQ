// <auto-generated />
using System;
using BlazorHrFaq.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorHrFaq.Database.Migrations
{
    [DbContext(typeof(DatabaseDb))]
    [Migration("20240823191523_JesperDb04")]
    partial class JesperDb04
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorHrFaq.Database.Model.Faq", b =>
                {
                    b.Property<Guid>("FaqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HitCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SearchWords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaqId");

                    b.ToTable("Faq");

                    b.HasData(
                        new
                        {
                            FaqId = new Guid("4be51388-febd-48a3-be7f-ce7f22daa4f8"),
                            Answer = "Hello world",
                            HitCount = 1,
                            LastUpdate = new DateTime(2024, 8, 23, 21, 15, 23, 464, DateTimeKind.Local).AddTicks(5298),
                            Priority = 1,
                            SearchWords = "Hej"
                        },
                        new
                        {
                            FaqId = new Guid("f33b61a9-10c1-4213-a381-f8b1c92098f6"),
                            Answer = "Hello world",
                            HitCount = 1,
                            LastUpdate = new DateTime(2024, 8, 23, 21, 15, 23, 464, DateTimeKind.Local).AddTicks(5428),
                            Priority = 1,
                            SearchWords = "Jesper"
                        },
                        new
                        {
                            FaqId = new Guid("9dbfad93-3b86-48c7-9cf2-b1740f547088"),
                            Answer = "Hello world",
                            HitCount = 1,
                            LastUpdate = new DateTime(2024, 8, 23, 21, 15, 23, 464, DateTimeKind.Local).AddTicks(5431),
                            Priority = 1,
                            SearchWords = "Test"
                        });
                });

            modelBuilder.Entity("BlazorHrFaq.Database.Model.MatchData", b =>
                {
                    b.Property<Guid>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatchId");

                    b.ToTable("Match");
                });
#pragma warning restore 612, 618
        }
    }
}
