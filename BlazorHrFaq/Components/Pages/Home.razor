@page "/"

@inject ILoggningService _log
@inject IFaqService _faq

<PageTitle>Home</PageTitle>


  <div class="mx-auto max-w-3xl text-center">
    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">@TextHelperResFile.TopTitleText.ReplaceText(null)</h2>
    <p class="leading-8 mt-2 text-lg text-gray-600">@TextHelperResFile.TopDeckText.ReplaceText(null)</p>
  </div>
<EditForm Model="@searchModel" FormName="searchHome" OnSubmit="HandleSubmitSearch" class="mx-auto mt-4 max-w-xl">
    <div class="grid-cols-1 grid gap-x-8 gap-y-6 sm:grid-cols-2">
        <div class="sm:col-span-2">
            <div class="mt-2.5">
                <InputText class="border-0 ring-1 block w-full rounded-md px-3.5 py-2 text-gray-900 shadow-sm ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6"
                           @bind-Value="searchModel.Text"
                           type="text"
                           placeholder="@TextHelperResFile.PlaceholderTextInput" />
            </div>
        </div>
    </div>
    <div class="mt-4">
        <button type="submit" class="block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
            @TextHelperResFile.SubmitSearchInput
        </button>
    </div>
</EditForm>
    

@code {
    [SupplyParameterFromForm]
    SearchModel searchModel { get; set; } = new SearchModel
    {
        Text = string.Empty
    };

    private async Task HandleSubmitSearch()
    {
        var resultData = await _faq.GetAnswersList(searchModel.Text);
        if(resultData.Status == EnumStatusValue.Success)
        {
            
        }
    }

    protected override Task OnInitializedAsync()
    {
        _log.Log("Test", EnumStatusValue.Success);
        return base.OnInitializedAsync();
    }
}