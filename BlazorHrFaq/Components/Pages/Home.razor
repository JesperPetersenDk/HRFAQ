@page "/"

@inject ILoggningService _log
@inject IFaqService _faq

<PageTitle>Home</PageTitle>


  <div class="mx-auto max-w-3xl text-center">
    <h2 class="text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl">@TextHelperResFile.TopTitleText.ReplaceText(null)</h2>
    <p class="leading-8 mt-2 text-lg text-gray-600">@TextHelperResFile.TopDeckText.ReplaceText(null)</p>
    <AlertInformation Message="@message"
                      Status="@status" />
  </div>
<EditForm Model="@searchModel" FormName="searchHome" OnSubmit="HandleSubmitSearch" class="mx-auto mt-4 max-w-3xl">
    <div class="grid-cols-1 grid gap-x-8 gap-y-6 sm:grid-cols-2">
        <div class="sm:col-span-2">
            <div class="mt-2.5">
                <InputText class="w-full rounded-lg border border-gray-200 bg-gray-200 px-4 py-3 text-sm focus:bg-gray-100 focus:outline-none focus:border-purple-400"
                           @bind-Value="searchModel.Text"
                           type="text"
                           placeholder="@TextHelperResFile.PlaceholderTextInput" />
            </div>
        </div>
    </div>
    <div class="mt-4">
        <button type="submit" class="block w-full rounded-md bg-green-600 px-3.5 py-2.5 text-center text-sm font-semibold 
                    text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600">
            @TextHelperResFile.SubmitSearchInput
        </button>
    </div>
</EditForm>

@if(searchData)
{
    <div class="mx-auto mt-4 max-w-3xl">
        <p class="font-bold uppercase">@TextHelperResFile.SearchTextHome @modelData.SearchWord</p>
        @if(modelDataList.Count > 0)
        {
            <div class="mt-3 overflow-hidden rounded-lg bg-white shadow-lg">
                <ul class="divide-y divide-gray-200">
                    @foreach (var item in modelDataList)
                    {
                        <li class="user-card flex items-center justify-between p-3">
                            <div class="flex items-center">
                                <span class="ml-3 font-medium">@item.Answer</span>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        }
    </div>
}

@code {
    [SupplyParameterFromForm]
    SearchModel searchModel { get; set; } = new SearchModel
    {
        Text = string.Empty
    };
    public bool searchData { get; set; } = false;
    public string message { get; set; } = string.Empty;
    public EnumStatusValue status { get; set; }

    ListItemModel modelData = new ListItemModel();
    List<ListWithSearchDataModel> modelDataList = new List<ListWithSearchDataModel>();

    private async Task HandleSubmitSearch()
    {
        var resultData = await _faq.GetAnswersList(searchModel.Text);
        status = resultData.Status;
        _log.Log(resultData.Message, status);
        if(status == EnumStatusValue.Success)
        {
            searchData = true;
            var dataResult = resultData.GetData.Cast<ListItemModel>().FirstOrDefault();
            if(dataResult != null)
            {
                modelData.SearchWord = dataResult.SearchWord;
                var listItem = dataResult.data.Cast<ListWithSearchDataModel>().ToList();
                foreach (var item in listItem)
                {
                    modelDataList.Add(new ListWithSearchDataModel
                    {
                        Answer = item.Answer,
                        HitCount = item.HitCount
                    });
                }
            }
        }
        else
        {
            searchData = false;
            message = resultData.MessegeTouser;
            searchModel.Text = string.Empty;
        }
    }

    protected override Task OnInitializedAsync()
    {
        _log.Log("User show the page. - Home", EnumStatusValue.Info);
        return base.OnInitializedAsync();
    }
}